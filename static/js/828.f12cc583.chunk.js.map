{"version":3,"file":"static/js/828.f12cc583.chunk.js","mappings":"6OAAQA,EAAaC,EAAQ,KAArBD,SA0BR,EAxBmB,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACpB,EAAoCF,EAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAQA,OACE,kBAAMF,SAPa,SAAAG,GACnBA,EAAEC,iBACFJ,EAASG,EAAEE,OAAOC,SAASC,MAAMC,OACjCN,EAAc,GACf,EAGC,WACE,kBACEO,KAAK,OACLC,KAAK,QACLF,MAAOP,EACPU,SAAU,SAAAR,GACRD,EAAcC,EAAEE,OAAOG,MACxB,KAEH,yCAGL,E,0BCoCD,EAtDe,WAAO,IAAD,EACnB,GAA0BV,EAAAA,EAAAA,UAAS,MAAnC,eAAOc,EAAP,KAAcC,EAAd,KACA,GAAwCf,EAAAA,EAAAA,UAAS,IAAjD,eAAOgB,EAAP,KAAqBC,EAArB,KACA,GAAkCjB,EAAAA,EAAAA,WAAS,GAA3C,eAAOkB,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMb,EAAK,UAAGY,EAAaE,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBR,GAAa,GADK,kBAGOS,EAAAA,EAAAA,IAAA,mGACuEnB,IAJ9E,QAGVoB,EAHU,QAMHC,KAAKC,cAAgB,GAChCd,EAAgBY,EAASC,KAAKE,SAPhB,gDAUhBjB,EAAS,sDAVO,yBAYhBI,GAAa,GAZG,4EAAH,qDAgBH,KAAVV,GACFkB,GAEH,GAAE,CAAClB,IAMJ,OACE,iCACE,SAAC,EAAD,CAAYP,SANW,SAAAQ,GACzBY,EAAgB,CAAEb,MAAOC,GAC1B,IAKIQ,IAAa,sCACH,OAAVJ,IAAkB,uBAAIA,IACtBE,EAAaiB,OAAS,IACrB,wBACGjB,EAAakB,KAAI,SAAAC,GAAK,OACrB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMf,GAAhD,SACGW,EAAMK,SAFFL,EAAME,GADM,QAWhC,C","sources":["components/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["const { useState } = require('react');\n\nconst SearchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.elements.query.value);\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        value={inputValue}\n        onChange={e => {\n          setInputValue(e.target.value);\n        }}\n      />\n      <button>Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import axios from 'axios';\nimport SearchForm from 'components/SearchForm';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [error, setError] = useState(null);\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=8510e0ad31b6bb4a75e3ab4ea305febb&query=${query}`\n        );\n        if (response.data.total_results > 0) {\n          setSearchMovies(response.data.results);\n        }\n      } catch {\n        setError('Oops, something went wrong. please try again later');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (query !== '') {\n      fetchImages();\n    }\n  }, [query]);\n\n  const changeSearchParams = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={changeSearchParams} />\n      {isLoading && <p>Loading...</p>}\n      {error !== null && <p>{error}</p>}\n      {searchMovies.length > 0 && (\n        <ul>\n          {searchMovies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","require","onSubmit","inputValue","setInputValue","e","preventDefault","target","elements","query","value","type","name","onChange","error","setError","searchMovies","setSearchMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","fetchImages","axios","response","data","total_results","results","length","map","movie","to","id","state","from","title"],"sourceRoot":""}