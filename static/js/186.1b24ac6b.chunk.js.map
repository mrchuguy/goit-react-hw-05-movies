{"version":3,"file":"static/js/186.1b24ac6b.chunk.js","mappings":"yNAmDA,UA9CgB,WACd,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBJ,GAAa,GADQ,kBAGIK,EAAAA,EAAAA,IAAA,6CACiBJ,EADjB,sDAHJ,QAGbK,EAHa,QAMNC,KAAKC,cAAgB,GAChCV,EAAWQ,EAASC,KAAKE,SAPR,gDAUnBb,EAAS,sDAVU,yBAYnBI,GAAa,GAZM,4EAAH,qDAepBI,GACD,GAAE,CAACH,KAGF,2BACGF,IAAa,sCACH,OAAVJ,IAAkB,uBAAIA,IACtBE,EAAQa,OAAS,IAChB,wBACGb,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,MAQH,IAAnBlB,EAAQa,SAAiBX,IACxB,uEAIP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8510e0ad31b6bb4a75e3ab4ea305febb`\n        );\n        if (response.data.total_results > 0) {\n          setReviews(response.data.results);\n        }\n      } catch {\n        setError('Oops, something went wrong. please try again later');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <p>Loading...</p>}\n      {error !== null && <p>{error}</p>}\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <b>Author: {review.author}</b>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews.length === 0 && !isLoading && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","error","setError","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieById","axios","response","data","total_results","results","length","map","review","author","content","id"],"sourceRoot":""}