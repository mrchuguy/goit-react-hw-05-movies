{"version":3,"file":"static/js/247.e01d5bd8.chunk.js","mappings":"yNA2DA,UAtDa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBJ,GAAa,GADQ,kBAGIK,EAAAA,EAAAA,IAAA,6CACiBJ,EADjB,sDAHJ,QAGbK,EAHa,QAMNC,KAAKV,KAAKW,OAAS,GAC9BV,EAAQQ,EAASC,KAAKV,MAPL,gDAUnBD,EAAS,sDAVU,yBAYnBI,GAAa,GAZM,4EAAH,qDAepBI,GACD,GAAE,CAACH,KAGF,+BACE,2BACGF,IAAa,sCACH,OAAVJ,IAAkB,uBAAIA,IACtBE,EAAKW,OAAS,IACb,wBACGX,EAAKY,KAAI,SAAAC,GAAQ,OAChB,0BAC6B,OAA1BA,EAASC,eACR,gBACEC,IAAG,yCAAoCF,EAASC,cAChDE,IAAKH,EAASI,QAGlB,uBAAIJ,EAASI,QACb,uCAAeJ,EAASK,eARjBL,EAASM,GADF,MAcL,IAAhBnB,EAAKW,SAAiBT,IACrB,sEAKT,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [error, setError] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8510e0ad31b6bb4a75e3ab4ea305febb`\n        );\n        if (response.data.cast.length > 0) {\n          setCast(response.data.cast);\n        }\n      } catch {\n        setError('Oops, something went wrong. please try again later');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        {isLoading && <p>Loading...</p>}\n        {error !== null && <p>{error}</p>}\n        {cast.length > 0 && (\n          <ul>\n            {cast.map(castItem => (\n              <li key={castItem.id}>\n                {castItem.profile_path !== null && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${castItem.profile_path}`}\n                    alt={castItem.name}\n                  />\n                )}\n                <p>{castItem.name}</p>\n                <p>Character: {castItem.character}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n        {cast.length === 0 && !isLoading && (\n          <p>We don't have any cast for this movie.</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["useState","error","setError","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieById","axios","response","data","length","map","castItem","profile_path","src","alt","name","character","id"],"sourceRoot":""}